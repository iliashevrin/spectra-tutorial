import "DwyerPatterns.spectra"

spec TrafficL3

sys boolean greenA;
sys boolean greenB;

env boolean carA;
env boolean carB;

gar alw !(greenA & greenB);

gar S_responds_to_P_globally(greenA, carA);
gar S_responds_to_P_globally(greenB, carB);

asm alwEv ONCE (HISTORICALLY (carA));

gar alw greenA -> PREV(greenB);

// Extend specification TrafficA3.spectra 
// Add an assumption that carA is always eventually followed by carB (use the pattern pRespondsToS).
